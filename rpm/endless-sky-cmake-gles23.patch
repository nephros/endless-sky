diff --git a/CMakeLists.txt b/CMakeLists.txt
index 65ecafdc..0e8069a7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -144,8 +144,37 @@ endif()
 
 # Link with OpenGL or OpenGL ES.
 if(ES_GLES)
-	find_package(OpenGL REQUIRED OpenGL EGL)
-	target_link_libraries(ExternalLibraries INTERFACE OpenGL::OpenGL OpenGL::EGL)
+	if(SAILFISHOS)
+		# our cmake doesn't support finding GLES stuff, lets do it manually:
+		# GLES
+		#find_library(GLES_LIB NAMES GLESv2)
+		#find_path(GLES_INCLUDE GLES3/gl3.h /usr/local/include /usr/include)
+		#target_link_libraries(ExternalLibraries INTERFACE "${GLES_LIB}")
+		#target_include_directories(ExternalLibraries INTERFACE "${GLES_INCLUDE}")
+		# EGL
+		#find_library(EGL_LIB NAMES egl)
+		#find_path(EGL_INCLUDE EGL/egl.h /usr/local/include /usr/include)
+		#target_link_libraries(ExternalLibraries INTERFACE "${EGL_LIB}")
+		#target_include_directories(ExternalLibraries INTERFACE "${EGL_INCLUDE}")
+		#target_link_libraries(ExternalLibraries INTERFACE "${EGL_LIB}")
+		#target_include_directories(ExternalLibraries INTERFACE "${EGL_INCLUDE}")
+		find_package(PkgConfig REQUIRED)
+		#pkg_check_modules(glesv2 REQUIRED)
+		pkg_check_modules(GLES REQUIRED glesv2)
+		#target_link_libraries(ExternalLibraries INTERFACE PkgConfig::GLES)
+		#target_include_directories(ExternalLibraries INTERFACE  PkgConfig::GLES)
+		target_link_libraries(ExternalLibraries INTERFACE "${GLES_LIBRARIES}")
+		target_include_directories(ExternalLibraries INTERFACE "${GLES_INCLUDE_DIRS}")
+		pkg_check_modules(EGL REQUIRED egl)
+		#target_link_libraries(ExternalLibraries INTERFACE PkgConfig::EGL)
+		#target_include_directories(ExternalLibraries INTERFACE  PkgConfig::EGL)
+		target_link_libraries(ExternalLibraries INTERFACE "${EGL_LIBRARIES}")
+		target_include_directories(ExternalLibraries INTERFACE "${EGL_INCLUDE_DIRS}")
+		#pkg_check_modules(WEGL REQUIRED wayland-egl)
+	else()
+		find_package(OpenGL REQUIRED OpenGL EGL)
+		target_link_libraries(ExternalLibraries INTERFACE OpenGL::OpenGL OpenGL::EGL)
+	endif()
 	target_compile_definitions(EndlessSkyLib PUBLIC ES_GLES)
 else()
 	# The Steam runtime can't rely on GLVND being available, so link against the legacy interface.
